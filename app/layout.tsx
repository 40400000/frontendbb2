import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { NavigationMenuDemo } from "@/components/navigation-menu-demo";
import { Button } from "@/components/ui/button";
import PromotionBanner from '@/components/promotion-banner';
import { ThemeProvider } from "@/components/theme-provider";
import { Footer } from "@/components/footer";
import { Breadcrumbs } from "@/components/breadcrumbs";
import { cookies } from 'next/headers';
import PasswordGate from '@/components/password-gate';
import { ALLOWED_PASSWORDS } from '@/lib/passwords';

const geistSans = Geist({
  variable: "--font-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Check password cookie
  const cookieStore = await cookies();
  const passwordCookie = cookieStore.get('site-password')?.value;
  const isAuthorized = Boolean(
    passwordCookie &&
    ALLOWED_PASSWORDS.map(p => p.toLowerCase()).includes(passwordCookie.toLowerCase())
  );

  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable} font-sans antialiased overflow-x-hidden`}>
        <ThemeProvider attribute="class" defaultTheme="dark">
          {/* If not authorized, show password gate */}
          {!isAuthorized ? (
            <PasswordGate />
          ) : (
            <>
              <header id="main-header" className="sticky top-0 z-50 w-full bg-background text-white">
                <div className="container mx-auto flex h-17 items-center px-4"> 
                  <div className="flex items-center w-full">
                    <NavigationMenuDemo />
                  </div>
                </div>
              </header>
              <Breadcrumbs />
              <main className="container mx-auto pt-0 overflow-x-hidden sm:overflow-x-visible">
                {children}
              </main>
              <div className="container mx-auto">
                <Footer />
              </div>
            </>
          )}
        </ThemeProvider>
      </body>
    </html>
  );
}
